# -*- coding: utf-8 -*-
"""GIT Basics 20200917 JO.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/14ogcEC_trzBQCUyEGUDBaAvda47yh6Wr
"""



"""Formatting text in Colaboratory: A guide to Colaboratory markdown
===

## What is markdown?

Colaboratory has two types of cells: text and code. The text cells are formatted using a simple markup language called markdown, based on [the original](https://daringfireball.net/projects/markdown/syntax).

More markdown examples:

*italics* and _italics_\

**bold**

~~strikethrough~~

No indent

>One level of indentation

>>Two levels of indentation

An ordered list:

1. One
1. Two
1. Three
An unordered list:

* One
* Two
* Three
"""

# this is a comment - will not execute if you run this cell
# comments are used to explain what a certain snippet of code is for
# to add a comment, just type a "#" before any text

"""## In this exercise, we will use pandas to load a csv file"""

# pandas is a library in Python commonly used for data analysis and data manipulation

import pandas as pd

"""## In this exercise, let's  upload the DataSeerGrabPrizeData from the case study"""

# in order to upload a file from your computer to this Colab notebook, we will be using a module from google.colab called "files"
# this upload might take a while because of the size of the dataset (265k+ rows)

from google.colab import files
files.upload()

# we will use a pandas to load the csv file we just uploaded to a dataframe

df = pd.read_csv('DataSeerGrabPrizeData.csv')

# we will use describe() to calculate statistical data from the dataset we just loaded
df.describe()

"""In this exercise, we'll be removing the rows with missing pick up distances. 

From inspection, all unallocated rides had no pick up distance value (i.e. if the ride was unallocated, passenger was not picked up)
"""

# dropna() is a function that removes missing values

df = df.dropna()

# we'll run describe() again to check if rows with missing values are now dropped, i.e. if output shows reduced row count

df.describe()

# we'll use another function from pandas to write the dataframe to another csv file
# we included "index = False" in the parameter to exclude the row numbers

df.to_csv('Grab_new.csv', index=False)

df.to_csv('Grab_with_row_numbers.csv')

files.download('Grab_new.csv')

files.download('Grab_with_row_numbers.csv')

